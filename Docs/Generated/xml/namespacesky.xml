<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacesky" kind="namespace" language="C++">
    <compoundname>sky</compoundname>
    <innerclass refid="classsky_1_1_application" prot="public">sky::Application</innerclass>
    <innerclass refid="classsky_1_1_assert_guard" prot="public">sky::AssertGuard</innerclass>
    <innerclass refid="classsky_1_1_buffer" prot="public">sky::Buffer</innerclass>
    <innerclass refid="structsky_1_1_color" prot="public">sky::Color</innerclass>
    <innerclass refid="structsky_1_1_event" prot="public">sky::Event</innerclass>
    <innerclass refid="classsky_1_1_g_d_i" prot="public">sky::GDI</innerclass>
    <innerclass refid="structsky_1_1_handle" prot="public">sky::Handle</innerclass>
    <innerclass refid="classsky_1_1_handle_table" prot="public">sky::HandleTable</innerclass>
    <innerclass refid="classsky_1_1_keyboard" prot="public">sky::Keyboard</innerclass>
    <innerclass refid="structsky_1_1_keyboard_state" prot="public">sky::KeyboardState</innerclass>
    <innerclass refid="structsky_1_1_key_state" prot="public">sky::KeyState</innerclass>
    <innerclass refid="structsky_1_1_matrix4" prot="public">sky::Matrix4</innerclass>
    <innerclass refid="structsky_1_1_memory_block" prot="public">sky::MemoryBlock</innerclass>
    <innerclass refid="structsky_1_1_metal_buffer" prot="public">sky::MetalBuffer</innerclass>
    <innerclass refid="classsky_1_1_metal_g_d_i" prot="public">sky::MetalGDI</innerclass>
    <innerclass refid="structsky_1_1_native_viewport" prot="public">sky::NativeViewport</innerclass>
    <innerclass refid="structsky_1_1_normal" prot="public">sky::Normal</innerclass>
    <innerclass refid="classsky_1_1_path" prot="public">sky::Path</innerclass>
    <innerclass refid="classsky_1_1_platform" prot="public">sky::Platform</innerclass>
    <innerclass refid="structsky_1_1_platform_events" prot="public">sky::PlatformEvents</innerclass>
    <innerclass refid="structsky_1_1_rectangle" prot="public">sky::Rectangle</innerclass>
    <innerclass refid="classsky_1_1_renderer" prot="public">sky::Renderer</innerclass>
    <innerclass refid="structsky_1_1_timespan" prot="public">sky::Timespan</innerclass>
    <innerclass refid="structsky_1_1_vector2" prot="public">sky::Vector2</innerclass>
    <innerclass refid="structsky_1_1_vector3" prot="public">sky::Vector3</innerclass>
    <innerclass refid="structsky_1_1_vector4" prot="public">sky::Vector4</innerclass>
    <innerclass refid="structsky_1_1_vertex" prot="public">sky::Vertex</innerclass>
    <innerclass refid="classsky_1_1_viewport" prot="public">sky::Viewport</innerclass>
    <innerclass refid="structsky_1_1_window_data" prot="public">sky::WindowData</innerclass>
    <innernamespace refid="namespacesky_1_1fs">sky::fs</innernamespace>
    <innernamespace refid="namespacesky_1_1impl">sky::impl</innernamespace>
    <innernamespace refid="namespacesky_1_1math">sky::math</innernamespace>
    <innernamespace refid="namespacesky_1_1rc">sky::rc</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_timespan_8hpp_1a27a1f6aafce9180179a3968fcceaac42" prot="public" static="no">
        <name>TimeInterval</name>
        <enumvalue id="dummy_1a27a1f6aafce9180179a3968fcceaac42a48484a39612824059f2e51d06691465b" prot="public">
          <name>ticks</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a27a1f6aafce9180179a3968fcceaac42ac50c3b1ca82ba7b7ab55afdf66a2f6c9" prot="public">
          <name>milliseconds</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a27a1f6aafce9180179a3968fcceaac42a783e8e29e6a8c3e22baa58a19420eb4f" prot="public">
          <name>seconds</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a27a1f6aafce9180179a3968fcceaac42a640fd0cc0ffa0316ae087652871f4486" prot="public">
          <name>minutes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a27a1f6aafce9180179a3968fcceaac42a73cdddd7730abfc13a55efb9f5685a3b" prot="public">
          <name>hours</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents an interval unit for representing the time value, used for conversions and timespan functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Timespan.hpp" line="20" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Timespan.hpp" bodystart="20" bodyend="26"/>
      </memberdef>
      <memberdef kind="enum" id="_definitions_8hpp_1a7ca25c3fd773ef4197dd32ce1fa5dddd" prot="public" static="no">
        <name>BufferUsage</name>
        <enumvalue id="dummy_1a7ca25c3fd773ef4197dd32ce1fa5dddda334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a7ca25c3fd773ef4197dd32ce1fa5dddda01e8d33b919bfd901714219a97842611" prot="public">
          <name>staticbuf</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a7ca25c3fd773ef4197dd32ce1fa5ddddab72f3bd391ba731a35708bfd8cd8a68f" prot="public">
          <name>dynamic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Graphics/GDI/Definitions.hpp" line="17" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Graphics/GDI/Definitions.hpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="_buttons_8hpp_1a857dc26995a92b3dabfb2fdc93ba7138" prot="public" static="no">
        <name>Button</name>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a4eb63c27325d4162f66d32ee9bdc65f9" prot="public">
          <name>button1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a9870a0015497f91ec6ab5722f8d9da51" prot="public">
          <name>button2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a8bcee3c0a4d9800b7177366127f8ea05" prot="public">
          <name>button3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138aa19add2c58ec4bc2e12dbb672d132426" prot="public">
          <name>button4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138acd3c3e6b40d856029eceda06d0c49f84" prot="public">
          <name>button5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138aa57fdb1f6b798e8dd96eaa6c25df677b" prot="public">
          <name>button6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a95cddf0b9b3d0045bea75d28e8a174ef" prot="public">
          <name>button7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a69b3899781384e1e3699ab67be04cbcf" prot="public">
          <name>button8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a98bd1c45684cf587ac2347a92dd7bb51" prot="public">
          <name>last</name>
          <initializer>= static_cast&lt;int&gt;(button8)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a811882fecd5c7618d7099ebbd39ea254" prot="public">
          <name>left</name>
          <initializer>= static_cast&lt;int&gt;(button1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a7c4f29407893c334a6cb7a87bf045c0d" prot="public">
          <name>right</name>
          <initializer>= static_cast&lt;int&gt;(button2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a857dc26995a92b3dabfb2fdc93ba7138a4a548addbfb239bbd12f5afe11a4b6dc" prot="public">
          <name>middle</name>
          <initializer>= static_cast&lt;int&gt;(button3)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of all mouse buttons available on the current platform. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Buttons.hpp" line="18" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Buttons.hpp" bodystart="18" bodyend="31"/>
      </memberdef>
      <memberdef kind="enum" id="_event_8hpp_1ab770c94900d069f1259d555abd9c25fa" prot="public" static="no">
        <name>EventType</name>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <briefdescription>
<para>The null or empty event. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa4cbad2a98a0838168fad4631c87e985b" prot="public">
          <name>window_moved</name>
          <briefdescription>
<para>Fired when a window is moved. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa9be8d500d0665161040d447cda42361b" prot="public">
          <name>window_resized</name>
          <briefdescription>
<para>Fired when a window is resized. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa22d759c713840216b117d6b7c1ad4436" prot="public">
          <name>window_closed</name>
          <briefdescription>
<para>Fired when a window is closed. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa7748d6e7ac67cbe097a7f81653a1e72e" prot="public">
          <name>window_refresh</name>
          <briefdescription>
<para>Fired when a window is damaged and requires a refresh. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faada1a99706551ee2e8dc6696e710075c1" prot="public">
          <name>window_focus</name>
          <briefdescription>
<para>Fired when a window gains focus. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa8ee27988e95bf2514a49c4d4d5e5dc75" prot="public">
          <name>window_defocused</name>
          <briefdescription>
<para>Fired when a window loses focus. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa0d11007a24fc70775dde936fa9247085" prot="public">
          <name>window_minimized</name>
          <briefdescription>
<para>Fired when a window changes from normal to minimized. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa553518b649d0fb75aafadaa5a380eb3c" prot="public">
          <name>window_restored</name>
          <briefdescription>
<para>Fired when a window is restored from minimized state to normal. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa9ade2d3698a1ecc78f86f170a3569743" prot="public">
          <name>framebuffer_resized</name>
          <briefdescription>
<para>Fired when the framebuffer is resized. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa997a7d527113485a131d8c2a48972087" prot="public">
          <name>mouse_pressed</name>
          <briefdescription>
<para>Fired when a mouse button is triggered. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa01a4fb4bee20a6d33705fecfc9d94f4a" prot="public">
          <name>mouse_released</name>
          <briefdescription>
<para>Fired when a mouse button was previously pressed and then released. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa7d0e34b74d8f1d906b1c20a4f1fc69a1" prot="public">
          <name>mouse_moved</name>
          <briefdescription>
<para>Fired when the mouse pointer is moved. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faabd806030944a7a97a705f3d7aaaaafa5" prot="public">
          <name>mouse_entered</name>
          <briefdescription>
<para>Fired when the mouse pointer moves from outside a window to inside its bounds. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faad2136378f6ee96436497ef8288b4b19c" prot="public">
          <name>mouse_exit</name>
          <briefdescription>
<para>Fired when the mouse pointer moves from inside a windows bounds to outside. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa089b0cdd8835d09cb1cabf38b3ce9c09" prot="public">
          <name>scroll</name>
          <briefdescription>
<para>Fired when the scroll wheel is used. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faae394504187ed264fde32ad8f24ad7fba" prot="public">
          <name>key_pressed</name>
          <briefdescription>
<para>Fired when a key on the keyboard was in a released state and is then pressed down. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa1c9a8a2a70a45dfd9ec6c00e67ecd04c" prot="public">
          <name>key_held</name>
          <briefdescription>
<para>Fired when a key was in a pressed state and is remains in a pressed state in the next frame. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faa54b6fde34ab4a8893fdd008d95331436" prot="public">
          <name>key_released</name>
          <briefdescription>
<para>Fired when a key was in the pressed or held state and is then released. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1ab770c94900d069f1259d555abd9c25faaa999c4fdf0438c3d806fd6f901e3519b" prot="public">
          <name>character_input</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum representing the possible types of events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Event.hpp" line="19" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Event.hpp" bodystart="19" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="_keycodes_8hpp_1a0dca21ac3d1734e9a58b96f78715bcd9" prot="public" static="no">
        <name>ModifierKey</name>
        <enumvalue id="dummy_1a0dca21ac3d1734e9a58b96f78715bcd9a2ab64f4ee279e5baf7ab7059b15e6d12" prot="public">
          <name>shift</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
<para>The left/right shift key modifier. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a0dca21ac3d1734e9a58b96f78715bcd9afc5364bf9dbfa34954526becad136d4b" prot="public">
          <name>control</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
<para>The left/right control key modifier. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a0dca21ac3d1734e9a58b96f78715bcd9a34823136d0dd91d0f5d22db740f7679c" prot="public">
          <name>alt</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
<para>The left/right alt key modifier. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a0dca21ac3d1734e9a58b96f78715bcd9a1b3231655cebb7a1f783eddf27d254ca" prot="public">
          <name>super</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
<para>The left/right super key modifier - this is usually the windows key on Windows or linux systems with a Windows keyboard or the option key on macOS. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of all available modifiers to use for keyboard events. A modifier is different to a Key code in that modifiers are considered as a part of the same event as a Key, modifying them, whereas a Key event can only have one keyboard key at any given time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Keycodes.hpp" line="23" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Keycodes.hpp" bodystart="23" bodyend="34"/>
      </memberdef>
      <memberdef kind="enum" id="_keycodes_8hpp_1a920b42610ebe9f36cc7b997806958ad8" prot="public" static="no">
        <name>Key</name>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aad921d60486366258809553a3db49a4a" prot="public">
          <name>unknown</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aff2364a0be3d20e46cc69efb36afe9a5" prot="public">
          <name>space</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a5bb3d7fe3608daf56c6301d00c582897" prot="public">
          <name>apostrophe</name>
          <initializer>= 39</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ab6d00dc1ba038e5901cd6c06b2daa192" prot="public">
          <name>comma</name>
          <initializer>= 44</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8adabe6e597b70e5760826aea1dcc564f7" prot="public">
          <name>minus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aa0acfa46d86f7610b2c73dbb28f64701" prot="public">
          <name>period</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a9fbbaa4cc515bc46e0c12e82a31df736" prot="public">
          <name>slash</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a91a0fdac7f3a5aaacef4f3259de156f1" prot="public">
          <name>num0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8abc7150e29a3d90dbe393c3d5ecd10399" prot="public">
          <name>num1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a5b90e6b21cecb50d29968eef295d3236" prot="public">
          <name>num2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a066d796af3f499cd8db802f09269500a" prot="public">
          <name>num3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a4b399f7d0b1413341223cdc995f5365b" prot="public">
          <name>num4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ad5c1ff98dde9b6059d5bf4969f1aef71" prot="public">
          <name>num5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a47a7f7d102989b1a1a1cd74399e0f242" prot="public">
          <name>num6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a65ee8dfd680b13de5d064cd951c47a2a" prot="public">
          <name>num7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aefd8e35482849954e792d35e715a549e" prot="public">
          <name>num8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a602eee9acf81ab74b86353e7a48fb3c5" prot="public">
          <name>num9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a77b7e24bb3642a4b9d3081d393785273" prot="public">
          <name>semicolon</name>
          <initializer>= 59</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a465289687a70db7aa7217cc240c29f0f" prot="public">
          <name>equal</name>
          <initializer>= 61</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a7fc56270e7a70fa81a5935b72eacbe29" prot="public">
          <name>A</name>
          <initializer>= 65</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a9d5ed678fe57bcca610140957afab571" prot="public">
          <name>B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a0d61f8370cad1d412f80b84d143e1257" prot="public">
          <name>C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8af623e75af30e62bbd73d6df5b50bb7b5" prot="public">
          <name>D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a3a3ea00cfc35332cedf6e5e9a32e94da" prot="public">
          <name>E</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a800618943025315f869e4e1f09471012" prot="public">
          <name>F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8adfcf28d0734569a6a693bc8194de62bf" prot="public">
          <name>G</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ac1d9f50f86825a1a2302ec2449c17196" prot="public">
          <name>H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8add7536794b63bf90eccfd37f9b147d7f" prot="public">
          <name>I</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aff44570aca8241914870afbc310cdb85" prot="public">
          <name>J</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aa5f3c6a11b03839d46af9fb43c97c188" prot="public">
          <name>K</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ad20caec3b48a1eef164cb4ca81ba2587" prot="public">
          <name>L</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a69691c7bdcc3ce6d5d8a1361f22d04ac" prot="public">
          <name>M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a8d9c307cb7f3c4a32822a51922d1ceaa" prot="public">
          <name>N</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8af186217753c37b9b9f958d906208506e" prot="public">
          <name>O</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a44c29edb103a2872f519ad0c9a0fdaaa" prot="public">
          <name>P</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8af09564c9ca56850d4cd6b3319e541aee" prot="public">
          <name>Q</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae1e1d3d40573127e9ee0480caf1283d6" prot="public">
          <name>R</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a5dbc98dcc983a70728bd082d1a47546e" prot="public">
          <name>S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ab9ece18c950afbfa6b0fdbfa4ff731d3" prot="public">
          <name>T</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a4c614360da93c0a041b22e537de151eb" prot="public">
          <name>U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a5206560a306a2e085a437fd258eb57ce" prot="public">
          <name>V</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a61e9c06ea9a85a5088a499df6458d276" prot="public">
          <name>W</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a02129bb861061d1a052c592e2dc6b383" prot="public">
          <name>X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a57cec4137b614c87cb4e24a3d003a3e0" prot="public">
          <name>Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a21c2e59531c8710156d34a3c30ac81d5" prot="public">
          <name>Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a1476759ce86d46d41e079a8584b7a4f9" prot="public">
          <name>left_bracket</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ac57aeddaffce62fead6be61022eb1340" prot="public">
          <name>backslash</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a7ffe0bf6f1b9c2223bda0e8a37dffe78" prot="public">
          <name>right_bracket</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ad4df32b0683e0452732936c7bfea16f1" prot="public">
          <name>grave_accent</name>
          <initializer>= 96</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a6111ccdd631cbaff751337ede8d6d889" prot="public">
          <name>international_1</name>
          <initializer>= 161</initializer>
          <briefdescription>
<para>Keycode to use for non-US mapped key. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a0ea7249e8d982e6eea8b003b33db2e86" prot="public">
          <name>international_2</name>
          <briefdescription>
<para>Keycode to use for non-US mapped key. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae0ebc3c409070d07f1df0f2f4132509e" prot="public">
          <name>escape</name>
          <initializer>= 256</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae2a7106f1cc8bb1e1318df70aa0a3540" prot="public">
          <name>enter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae7f8cbd87d347be881cba92dad128518" prot="public">
          <name>tab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a5528770f4bce9c9b0ce9bbb8645aef45" prot="public">
          <name>backspace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae0df5f3dfd2650ae5be9993434e2b2c0" prot="public">
          <name>insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a5732df9ee14926851255e2f029258063" prot="public">
          <name>delete_key</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a7c4f29407893c334a6cb7a87bf045c0d" prot="public">
          <name>right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a811882fecd5c7618d7099ebbd39ea254" prot="public">
          <name>left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a74e8333ad11685ff3bdae589c8f6e34d" prot="public">
          <name>down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a46c48bec0d282018b9d167eef7711b2c" prot="public">
          <name>up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8af8e72578226499b7311f292f1deba130" prot="public">
          <name>page_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ad8a0a6a1d9f3b78b1af0293cf6ac5dd7" prot="public">
          <name>page_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a106a6c241b8797f52e1e77317b96a201" prot="public">
          <name>home</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a7f021a1415b86f2d013b2618fb31ae53" prot="public">
          <name>end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a5605274e348d557ceb0f9ea356fa93e7" prot="public">
          <name>caps_lock</name>
          <initializer>= 280</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a52752d17cb8e9c551c3a736c45e1ddf1" prot="public">
          <name>scroll_lock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a16269f180edc6317f3cc3d8860984b98" prot="public">
          <name>num_lock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a58f26ac305986a702312d42b4dd87761" prot="public">
          <name>print_screen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aec1b81965109165de6b38cd92c1e39f9" prot="public">
          <name>pause</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8abd19836ddb62c11c55ab251ccaca5645" prot="public">
          <name>f1</name>
          <initializer>= 290</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a3667f6a0c97490758d7dc9659d01ea34" prot="public">
          <name>f2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a1779cf3aa50c413afc7e05adb7e1b0de" prot="public">
          <name>f3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a6e1fcd704528ad8bf6d6bbedb9210096" prot="public">
          <name>f4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a74ce2e1a498f2fa27b5542040be774dc" prot="public">
          <name>f5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a64e4cda19b3f3ea4a7a56b5ba8cc33ca" prot="public">
          <name>f6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a6c664eeed34d9c29a711bdb374831b49" prot="public">
          <name>f7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a581c3010417303e1ee4c0657d76318d0" prot="public">
          <name>f8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a6506f0388343a1f09fd708fb15c5ade9" prot="public">
          <name>f9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a82b5f6802b727b0d948d38cbccd48904" prot="public">
          <name>f10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8af344a40a52a94ab7903e6b35896b543e" prot="public">
          <name>f11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a8039b4e0e6fe78bee7d3e5cfbfa343f0" prot="public">
          <name>f12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a89b45ff321063b749efc5b5b3aa79930" prot="public">
          <name>f13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a1323fd7c68edb36766c982e6343cfdb4" prot="public">
          <name>f14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ad3c8a0832878a5e1d4e873e57b7f4238" prot="public">
          <name>f15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aa2449b6477c1fef79be4202906486876" prot="public">
          <name>f16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8afe397f3f6f24b8500bc9c5f356384020" prot="public">
          <name>f17</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ad60ea3899962ccffb8e5c7893e7eddd7" prot="public">
          <name>f18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a599f127bd63e32d6fd5457f9f1fa1e14" prot="public">
          <name>f19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a3ad32b999fe4b4b2f6229acc5630e97b" prot="public">
          <name>f20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8afc698bd6eba4453d16fc4acb4abf4a5a" prot="public">
          <name>f21</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a186381290b21833e0f1761ff4a87d4ba" prot="public">
          <name>f22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a8ea5d22eba2d75b7651304f4dcde8eee" prot="public">
          <name>f23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8affa04600c43d9c24762433fd7c4f55a3" prot="public">
          <name>f24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a559afd0979bb51e7532980fc12ca3f4e" prot="public">
          <name>f25</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8abeb8e3002141008ad395a4179160c59c" prot="public">
          <name>keypad_0</name>
          <initializer>= 320</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a17bc3c0912747ca8a45c80ec4d4ac6ba" prot="public">
          <name>keypad_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae4c3b569ae10cff6dba7b05c936e1fa2" prot="public">
          <name>keypad_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a179845d0887a3aca46758bd17c15ca64" prot="public">
          <name>keypad_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a9f4cd05501c727e4075f74d3137d666e" prot="public">
          <name>keypad_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a95fd44d33428a56fc923be3cfdce1403" prot="public">
          <name>keypad_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aa49dd2274f0196b2bde955621f45457b" prot="public">
          <name>keypad_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a3ea17710316bd14054997ebded7c1177" prot="public">
          <name>keypad_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8abc57af92a24bd0ebed4d085051037685" prot="public">
          <name>keypad_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aa765ab8dcd135525d71fd76618138de2" prot="public">
          <name>keypad_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae1377c55dc3f1ff135b677e16751f564" prot="public">
          <name>keypad_decimal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a84498e102b2629d3e7f0abf81229d8c0" prot="public">
          <name>keypad_divide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a05c9c30bfd5524696356470aa1d982fd" prot="public">
          <name>keypad_multiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a17b2defd80df9a50a7734bdb01de32d1" prot="public">
          <name>keypad_minus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a8c1106bd91ab68a34e4f25520e91b80f" prot="public">
          <name>keypad_plus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8af4b43f2b9d5df358690103e431d59e85" prot="public">
          <name>keypad_enter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aa1690a2472ae0f31ec9b97f32b8e3208" prot="public">
          <name>keypad_equals</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a50628fab62b5a54a5f0a7e7c7b4f157b" prot="public">
          <name>left_shift</name>
          <initializer>= 340</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ae31c29a406e855ae968bcfd47c55c1b8" prot="public">
          <name>left_control</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a217c34bd52ebbf6dbb13f7f6d7e7f53f" prot="public">
          <name>left_alt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ad6918048b140d7c7194665e76d39168d" prot="public">
          <name>left_super</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a4ee719aaa47e6583842088cf8e6ee8d0" prot="public">
          <name>right_shift</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a796376b16624346a60c77f88043bf037" prot="public">
          <name>right_control</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8ac868ec4aff5290f22227b0da117cbcc1" prot="public">
          <name>right_alt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8aeaba95a6893cb395387611692d4b954e" prot="public">
          <name>right_super</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a8d6ab84ca2af9fccd4e4048694176ebf" prot="public">
          <name>menu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a920b42610ebe9f36cc7b997806958ad8a98bd1c45684cf587ac2347a92dd7bb51" prot="public">
          <name>last</name>
          <initializer>= static_cast&lt;int&gt;(menu)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of all keycodes on a US standard keyboard. The keycodes map to the ASCII standard with non-ASCII characters allocated to the 256+ range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Keycodes.hpp" line="38" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Input/Keycodes.hpp" bodystart="38" bodyend="163"/>
      </memberdef>
      <memberdef kind="enum" id="group__os_1gae68ba00906434857ac412863978b4de1" prot="public" static="no">
        <name>OS</name>
        <enumvalue id="group__os_1ggae68ba00906434857ac412863978b4de1aad921d60486366258809553a3db49a4a" prot="public">
          <name>unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggae68ba00906434857ac412863978b4de1a43b9d8ea18c48c3a64c4e37338fc668f" prot="public">
          <name>macos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggae68ba00906434857ac412863978b4de1a0f4137ed1502b5045d6083aa258b5c42" prot="public">
          <name>windows</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggae68ba00906434857ac412863978b4de1a26e980d26840d8cefb033391cd6ddbaf" prot="public">
          <name>linux_generic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggae68ba00906434857ac412863978b4de1a9e304d4e8df1b74cfa009913198428ab" prot="public">
          <name>ios</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggae68ba00906434857ac412863978b4de1ae4dbfb49abab8408885679aa8dc4017f" prot="public">
          <name>iphone_sim</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggae68ba00906434857ac412863978b4de1ac31b32364ce19ca8fcd150a417ecce58" prot="public">
          <name>android</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines the current operating system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" line="38" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="group__os_1gacec7a47350032f6268fbadd6deb252f3" prot="public" static="no">
        <name>OSFamily</name>
        <enumvalue id="group__os_1ggacec7a47350032f6268fbadd6deb252f3aad921d60486366258809553a3db49a4a" prot="public">
          <name>unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggacec7a47350032f6268fbadd6deb252f3a1f3870be274f6c49b3e31a0c6728957f" prot="public">
          <name>apple</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggacec7a47350032f6268fbadd6deb252f3a5f532a3fc4f1ea403f37070f59a7a53a" prot="public">
          <name>microsoft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggacec7a47350032f6268fbadd6deb252f3a0c1255bdd5a4b86d2692d262405bf495" prot="public">
          <name>linuxos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__os_1ggacec7a47350032f6268fbadd6deb252f3ac31b32364ce19ca8fcd150a417ecce58" prot="public">
          <name>android</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines the family of operating systems that the current platform belongs to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" line="50" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="_config_8hpp_1a651cb767e0e7a7b70b1841290aefc607" prot="public" static="no">
        <name>Compiler</name>
        <enumvalue id="dummy_1a651cb767e0e7a7b70b1841290aefc607aad921d60486366258809553a3db49a4a" prot="public">
          <name>unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a651cb767e0e7a7b70b1841290aefc607a2c5517db7bc397f9b14ae357a7ce54ff" prot="public">
          <name>clang</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a651cb767e0e7a7b70b1841290aefc607ae0d511356bd44120af49cc96c9dcf3b3" prot="public">
          <name>gcc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a651cb767e0e7a7b70b1841290aefc607a3a69e825de46a19a06d800acd98739a9" prot="public">
          <name>msvc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" line="125" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" bodystart="125" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___conditional_types_1ga320d9c06868dffb69f7409e7699c5780" prot="public" static="no">
        <type>typename std::conditional&lt; Size&lt;=UINT8_MAX, uint8_t, typename std::conditional&lt; Size&lt;=UINT16_MAX, uint16_t, uint32_t &gt;::type &gt;::type</type>
        <definition>using sky::conditional_uint = typedef typename std::conditional&lt;Size &lt;= UINT8_MAX, uint8_t, typename std::conditional&lt;Size &lt;= UINT16_MAX, uint16_t,uint32_t &gt;::type &gt;::type</definition>
        <argsstring></argsstring>
        <name>conditional_uint</name>
        <briefdescription>
<para>Represents a conditional unsigned integer with a minimum value of uint8 and a maximum value of uint32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Containers/ConditionalTypes.hpp" line="28" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Containers/ConditionalTypes.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___conditional_types_1ga2d0c128c9556b758ccaef05dc62d395e" prot="public" static="no">
        <type>typename std::conditional&lt; Size&lt;=UINT16_MAX, uint16_t, typename std::conditional&lt; Size&lt;=UINT32_MAX, uint32_t, uint64_t &gt;::type &gt;::type</type>
        <definition>using sky::large_conditional_uint = typedef typename std::conditional&lt;Size &lt;= UINT16_MAX, uint16_t, typename std::conditional&lt;Size &lt;= UINT32_MAX, uint32_t, uint64_t &gt;::type &gt;::type</definition>
        <argsstring></argsstring>
        <name>large_conditional_uint</name>
        <briefdescription>
<para>Represents a large conditional unsigned integer with a minimum value of uint16 and a maximum value of uint64. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Containers/ConditionalTypes.hpp" line="36" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Containers/ConditionalTypes.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_rectangle_8hpp_1a2763a6c272ebd92de922bbdce35da490" prot="public" static="no">
        <type><ref refid="structsky_1_1_rectangle" kindref="compound">Rectangle</ref>&lt; int &gt;</type>
        <definition>using sky::IntRect = typedef Rectangle&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>IntRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp" line="143" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_rectangle_8hpp_1a2e9877d99eb3b31e32d5c3a58b16a5e3" prot="public" static="no">
        <type><ref refid="structsky_1_1_rectangle" kindref="compound">Rectangle</ref>&lt; float &gt;</type>
        <definition>using sky::FloatRect = typedef Rectangle&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>FloatRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp" line="144" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_rectangle_8hpp_1a27b4f07510db8ba765f0087c6a259bfa" prot="public" static="no">
        <type><ref refid="structsky_1_1_rectangle" kindref="compound">Rectangle</ref>&lt; double &gt;</type>
        <definition>using sky::DoubleRect = typedef Rectangle&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>DoubleRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp" line="145" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mat4aliases_1ga41f5eca971ff86667bec94df4c87cc18" prot="public" static="no">
        <type><ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; double &gt;</type>
        <definition>using sky::Matrix4d = typedef Matrix4&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Matrix4d</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref> with elements of type double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" line="323" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mat4aliases_1ga0a1835c19cf2b259a5d212e4e7709391" prot="public" static="no">
        <type><ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; float &gt;</type>
        <definition>using sky::Matrix4f = typedef Matrix4&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Matrix4f</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref> with elements of type float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" line="325" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mat4aliases_1ga719580f6ae024dbfcb4b76ccbf0d2886" prot="public" static="no">
        <type><ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; int &gt;</type>
        <definition>using sky::Matrix4i = typedef Matrix4&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>Matrix4i</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref> with elements of type int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" line="327" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mat4aliases_1ga5e54ce96889d26b2d69d29ab57fd09cc" prot="public" static="no">
        <type><ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; unsigned int &gt;</type>
        <definition>using sky::Matrix4u = typedef Matrix4&lt;unsigned int&gt;</definition>
        <argsstring></argsstring>
        <name>Matrix4u</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref> with elements of type unsigned int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" line="329" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mat4aliases_1ga3a1c98143f406650290733ef30bd9504" prot="public" static="no">
        <type><ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; bool &gt;</type>
        <definition>using sky::Matrix4b = typedef Matrix4&lt;bool&gt;</definition>
        <argsstring></argsstring>
        <name>Matrix4b</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref> with elements of type bool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" line="331" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec2aliases_1ga55e2fffac32ffb2a6be153bd44567fca" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; double &gt;</type>
        <definition>using sky::Vector2d = typedef Vector2&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2d</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> with elements of type double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="408" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec2aliases_1ga31dcab80e3a246245eca19c52dbc7df1" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; float &gt;</type>
        <definition>using sky::Vector2f = typedef Vector2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2f</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> with elements of type float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="410" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec2aliases_1ga782d29576c8d4b94a602fc1206c4114e" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; int32_t &gt;</type>
        <definition>using sky::Vector2i = typedef Vector2&lt;int32_t&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2i</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> with elements of type 32 bit int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="412" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec2aliases_1ga4396f8069cbf12d71652a3be43dc55b6" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; uint32_t &gt;</type>
        <definition>using sky::Vector2u = typedef Vector2&lt;uint32_t&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2u</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> with elements of type 32 bit unsigned int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="414" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec2aliases_1gaec0c495434fada2a89189be866ea785b" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; bool &gt;</type>
        <definition>using sky::Vector2b = typedef Vector2&lt;bool&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2b</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> with elements of type bool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="416" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec3aliases_1ga070354b33c58da9f5bd0f86ce107fba9" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; double &gt;</type>
        <definition>using sky::Vector3d = typedef Vector3&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3d</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> with elements of type double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="444" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec3aliases_1ga4c643b9709edf344265ccc25fb528875" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; float &gt;</type>
        <definition>using sky::Vector3f = typedef Vector3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3f</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> with elements of type float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="446" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec3aliases_1gabc7c4724943ae8018373498fdc834c85" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; int32_t &gt;</type>
        <definition>using sky::Vector3i = typedef Vector3&lt;int32_t&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3i</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> with elements of type 32 bit int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="448" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec3aliases_1ga4d056b1ed603f5a4c9d8b72929cef9bd" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; uint32_t &gt;</type>
        <definition>using sky::Vector3u = typedef Vector3&lt;uint32_t&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3u</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> with elements of type 32 bit unsigned int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="450" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec3aliases_1ga8afff78ccc05a61a0706c5d3e1ced26e" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; bool &gt;</type>
        <definition>using sky::Vector3b = typedef Vector3&lt;bool&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3b</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> with elements of type bool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="452" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec4aliases_1ga5e802176d17f9240937e4a66bf26f4a9" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; double &gt;</type>
        <definition>using sky::Vector4d = typedef Vector4&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Vector4d</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> with elements of type unsigned double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="468" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec4aliases_1ga8e592c0fc9ad30cb8c8afba90765156a" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; float &gt;</type>
        <definition>using sky::Vector4f = typedef Vector4&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Vector4f</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> with elements of type unsigned float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="470" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec4aliases_1ga3f5931e012e9be4b76577e498a81ca70" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; int32_t &gt;</type>
        <definition>using sky::Vector4i = typedef Vector4&lt;int32_t&gt;</definition>
        <argsstring></argsstring>
        <name>Vector4i</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> with elements of type 32 bit unsigned int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="472" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec4aliases_1gad1b36c328828e5efc7f2e211fa288092" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; uint32_t &gt;</type>
        <definition>using sky::Vector4u = typedef Vector4&lt;uint32_t&gt;</definition>
        <argsstring></argsstring>
        <name>Vector4u</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> with elements of type 32 bit unsigned unsigned int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="474" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vec4aliases_1gaa7cc17780a206ece7aa6bf71976ea111" prot="public" static="no">
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; bool &gt;</type>
        <definition>using sky::Vector4b = typedef Vector4&lt;bool&gt;</definition>
        <argsstring></argsstring>
        <name>Vector4b</name>
        <briefdescription>
<para>Type alias for a <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> with elements of type unsigned bool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="476" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="476" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_config_8hpp_1ab04bce810a28b59e2a6f0a2943e40962" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>sky::target_family</definition>
        <argsstring></argsstring>
        <name>target_family</name>
        <initializer>= OSFamily::unknown</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The family of operating systems currently being compiled on </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" line="117" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_config_8hpp_1ad9f481ad5aff4b3bea98f77dd3d53085" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>sky::target_platform</definition>
        <argsstring></argsstring>
        <name>target_platform</name>
        <initializer>= OS::unknown</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The operating system currently being compiled on </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" line="118" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_config_8hpp_1a413628263fa4c586d570023462195024" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto sky::target_compiler</definition>
        <argsstring></argsstring>
        <name>target_compiler</name>
        <initializer>= Compiler::unknown</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" line="149" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Config.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_timespan_8inl_1aca08e056079d158ce7ebc6c04c62c6c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structsky_1_1_timespan" kindref="compound">Timespan</ref></type>
        <definition>Timespan sky::get_timespan&lt; TimeInterval::milliseconds &gt;</definition>
        <argsstring>(const double millis)</argsstring>
        <name>get_timespan&lt; TimeInterval::milliseconds &gt;</name>
        <param>
          <type>const double</type>
          <declname>millis</declname>
        </param>
        <briefdescription>
<para>Gets a new Time unit from a specified interval. Template specialization for Time::Interval::milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of milliseconds to assign to the Time unit </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Time unit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" line="20" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="_timespan_8inl_1a2ab36c1b8eac27722f582687b7b523c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structsky_1_1_timespan" kindref="compound">Timespan</ref></type>
        <definition>Timespan sky::get_timespan&lt; TimeInterval::seconds &gt;</definition>
        <argsstring>(const double secs)</argsstring>
        <name>get_timespan&lt; TimeInterval::seconds &gt;</name>
        <param>
          <type>const double</type>
          <declname>secs</declname>
        </param>
        <briefdescription>
<para>Gets a new Time unit from a specified interval. Template specialization for Time::Interval::seconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of seconds to assign to the Time unit </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Time unit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" line="30" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="_timespan_8inl_1af03d4232a46255c46f0141c7330bde55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structsky_1_1_timespan" kindref="compound">Timespan</ref></type>
        <definition>Timespan sky::get_timespan&lt; TimeInterval::minutes &gt;</definition>
        <argsstring>(const double mins)</argsstring>
        <name>get_timespan&lt; TimeInterval::minutes &gt;</name>
        <param>
          <type>const double</type>
          <declname>mins</declname>
        </param>
        <briefdescription>
<para>Gets a new Time unit from a specified interval. Template specialization for Time::Interval::minutes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of minutes to assign to the Time unit </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Time unit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" line="40" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="_timespan_8inl_1a1e733c6790645e56097e0ab88680791d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structsky_1_1_timespan" kindref="compound">Timespan</ref></type>
        <definition>Timespan sky::get_timespan&lt; TimeInterval::hours &gt;</definition>
        <argsstring>(const double hours)</argsstring>
        <name>get_timespan&lt; TimeInterval::hours &gt;</name>
        <param>
          <type>const double</type>
          <declname>hours</declname>
        </param>
        <briefdescription>
<para>Gets a new Time unit from a specified interval. Template specialization for Time::Interval::hours. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of hours to assign to the Time unit </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Time unit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" line="50" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Timespan.inl" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_timespan_8hpp_1a38c7bf83fcf2c27d9933de2aa5c7c963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>TimeInterval</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_timespan" kindref="compound">Timespan</ref></type>
        <definition>Timespan sky::get_timespan</definition>
        <argsstring>(const double duration)</argsstring>
        <name>get_timespan</name>
        <param>
          <type>const double</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
<para>Gets a new Time unit from a specified interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Interval unit to use (ticks, seconds, minutes etc.) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration in the specified Interval to assign to the Time unit </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Time unit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Timespan.hpp" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_matrix4_8hpp_1a5dcac7c946630d8eaf87f0a15ceb86ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Matrix4&lt; T &gt; &amp;mat, const Vector4&lt; T &gt; &amp;vec)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; T &gt; &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Operator* overload for multiplying a matrix by a column vector and retrieving a vector result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the matrix and vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to multiply </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to multiple </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Vector result of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" line="292" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" bodystart="292" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="_matrix4_8hpp_1aba6dbbd571cfdd84f9f00b07622c9ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; T &gt;</type>
        <definition>Matrix4&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Matrix4&lt; T &gt; &amp;left, const Matrix4&lt; T &gt; &amp;right)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Operator* overload for multiplying a <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref> by a <ref refid="structsky_1_1_matrix4" kindref="compound">Matrix4</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the matrices </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>LHS Matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>RHS Matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the multiplication operation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" line="308" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp" bodystart="308" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1afd817327f4a67ead1c9e4c60c2a633c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator+</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator+ overload with a Vector value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&apos;s data type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of addition of each of the lefts elements with the rights </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="261" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="261" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1affdcb27616b41e948e569282dc1e3be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator+</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator+ overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> and scalars data type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (scalar) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Addition result of each of the vectors elements with the scalar. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="275" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="275" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1a0250bf63ecc2765d1733dc4541164cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator- overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subtraction result of each of the lefts elements by the right elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="289" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="289" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1a134f34b57d12a596d2b944e83c30898c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator- overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (scalar) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subtraction result of each of the vectors elements by the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="303" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="303" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1ae831c4fc3f5a11786681186a9cc78e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator/</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator/ overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Division result of each of the left operands elements over the right elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="317" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="317" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1a0ba4e83d3818f5b21e9d2e05410479e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator/</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;vec, const T &amp;divisor)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>divisor</declname>
        </param>
        <briefdescription>
<para>Binary operator/ overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Division result of each of the left operands elements over the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="331" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="331" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1a5dca441baac0a4f663e4f091a5089ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator* overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&apos;s </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplication result of each of the vectors elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="345" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="345" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1af109571a51d92d4a2e51b4c7395fe7ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator* overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplication result of each of the vectors elements with the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="359" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="359" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1aeb87136fbc451cf0535afd33737b1b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;vec)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Unary operator- overload (negation) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&apos;s elements </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to negate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of negating each of the vectors elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="372" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="372" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1a3072c64cc6d92fd605c8104402c96ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool sky::operator==</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator== overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all elements in both <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&apos;s are equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="388" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="_vector2_8hpp_1ac7675e757c63afd855e94984e0b834c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool sky::operator!=</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator!= overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if any element in either <ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref> are not equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" line="399" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp" bodystart="399" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1a0cd582f5bd2c529b05f8d5a715efe80c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator+</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;left, const Vector3&lt; T &gt; &amp;right)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator+ overload with a Vector value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&apos;s data type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of addition of each of the lefts elements with the rights </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="288" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="288" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1a62361ba09c89eb346ea27dab9109ac6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator+</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator+ overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> and scalars data type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (scalar) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Addition result of each of the vectors elements with the scalar. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="303" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="303" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1af0438f5d1b5e93e5cdd673c68968f49f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;left, const Vector3&lt; T &gt; &amp;right)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator- overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subtraction result of each of the lefts elements by the right elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="318" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="318" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1af753a1064ee2310aaf682cf53eb43133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator- overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (scalar) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subtraction result of each of the vectors elements by the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="333" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="333" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1ae0d783e88671ca2a7bf22629660d91e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator/</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;left, const Vector3&lt; T &gt; &amp;right)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator/ overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Division result of each of the left operands elements over the right elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="348" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="348" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1a10405ef95e038d8fa2233d7f024fea0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator/</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;vec, const T &amp;divisor)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>divisor</declname>
        </param>
        <briefdescription>
<para>Binary operator/ overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Division result of each of the left operands elements over the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="363" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="363" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1af5c9abaa722cd91ea9a7c6caba1e1809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;left, const Vector3&lt; T &gt; &amp;right)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator* overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&apos;s </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplication result of each of the vectors elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="378" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="378" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1a48316fcd304be15a9cbac4321574c9fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator* overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplication result of each of the vectors elements with the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="393" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="393" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1ad2491c652debde6cfb325f3eb3f03b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt;</type>
        <definition>Vector3&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;vec)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Unary operator- overload (negation) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&apos;s elements </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to negate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of negating each of the vectors elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="407" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="407" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1a95e5cdb779fb09911878c5670bb58d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool sky::operator==</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;left, const Vector3&lt; T &gt; &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator== overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all elements in both <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&apos;s are equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="424" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="424" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="_vector3_8hpp_1ad12f3b37fda057ba2adcf8a645cf62bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool sky::operator!=</definition>
        <argsstring>(const Vector3&lt; T &gt; &amp;left, const Vector3&lt; T &gt; &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator!= overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if any element in either <ref refid="structsky_1_1_vector3" kindref="compound">Vector3</ref> are not equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" line="435" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1ab41082c6049c5ceb2e073a2aa72ffada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator+</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator+ overload with a Vector value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&apos;s data type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of addition of each of the lefts elements with the rights </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="300" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="300" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1a183ecc1d4f9721bfc21eb08f7ca2ea92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator+</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator+ overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> and scalars data type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (scalar) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Addition result of each of the vectors elements with the scalar. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="316" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="316" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1acbfa8afc0de89c4357b559b3ad9dfe3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator- overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subtraction result of each of the lefts elements by the right elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="332" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="332" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1a58285e4fbc6ce1bbbcb47b7e78b994cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator- overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (scalar) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subtraction result of each of the vectors elements by the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="348" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="348" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1a4f236af3c813c89915d0a35e4896aa4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator/</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator/ overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Division result of each of the left operands elements over the right elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="364" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="364" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1ac29a94bad3c5edb76916476b8a2f97c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator/</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;vec, const T &amp;divisor)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>divisor</declname>
        </param>
        <briefdescription>
<para>Binary operator/ overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Division result of each of the left operands elements over the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="380" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="380" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1a3b7dd57e29212c85550dd23b7a4fd2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator* overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&apos;s </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplication result of each of the vectors elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="396" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="396" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1af29cb73d743ca5aeb1848042a18f53f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator*</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;vec, const T &amp;scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Binary operator* overload with a scalar value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> and the scalar </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Multiplication result of each of the vectors elements with the scalar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="412" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="412" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1ae591d7f86c65ebcc8f993e7c9c00f60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt;</type>
        <definition>Vector4&lt;T&gt; sky::operator-</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;vec)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Unary operator- overload (negation) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of the <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&apos;s elements </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to negate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of negating each of the vectors elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="427" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="427" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1abfdead2b82fa7dd6ddbb40cd5b7ff9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool sky::operator==</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator== overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all elements in both <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&apos;s are equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="445" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="445" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="_vector4_8hpp_1a5aa3a8af9615bd0491eb2e393cd37047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool sky::operator!=</definition>
        <argsstring>(const Vector4&lt; T &gt; &amp;left, const Vector4&lt; T &gt; &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Binary operator!= overload. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type of each <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if any element in either <ref refid="structsky_1_1_vector4" kindref="compound">Vector4</ref> are not equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" line="457" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp" bodystart="457" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a413ea3efe4771643b35dacea327f6a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t sky::get_hertz</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_hertz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Internal/Time.cpp" line="24" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Internal/Time.cpp" bodystart="40" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a31ed0254df5a85e5f9eee592a0bb243f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t sky::high_resolution_time</definition>
        <argsstring>() noexcept</argsstring>
        <name>high_resolution_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Internal/Time.cpp" line="26" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Internal/Time.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1aae8f30dd422c4d03b43a6036b8297644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t sky::get_ticks_per_second</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_ticks_per_second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Internal/Time.cpp" line="33" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Internal/Time.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="_windows_platform_8cpp_1a618f19036f859acf41937b46c86557db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int CALLBACK</type>
        <definition>int CALLBACK sky::WinMain</definition>
        <argsstring>(HINSTANCE instance, HINSTANCE prev_instance, LPSTR cmd_line, int cmd_show)</argsstring>
        <name>WinMain</name>
        <param>
          <type>HINSTANCE</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>HINSTANCE</type>
          <declname>prev_instance</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>cmd_line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd_show</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Windows/WindowsPlatform.cpp" line="23" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Windows/WindowsPlatform.cpp" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_windows_platform_8cpp_1af35796bd947b96ad0e5157135f13b8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LRESULT CALLBACK</type>
        <definition>LRESULT CALLBACK sky::window_callback</definition>
        <argsstring>(HWND window, UINT message, WPARAM wparam, LPARAM lparam)</argsstring>
        <name>window_callback</name>
        <param>
          <type>HWND</type>
          <declname>window</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>message</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wparam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Windows/WindowsPlatform.cpp" line="33" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Platform/Windows/WindowsPlatform.cpp" bodystart="73" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Containers/Buffer.hpp" line="18" column="1"/>
  </compounddef>
</doxygen>
