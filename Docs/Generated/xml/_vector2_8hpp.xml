<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_vector2_8hpp" kind="file" language="C++">
    <compoundname>Vector2.hpp</compoundname>
    <includes refid="_vector2_8hpp" local="yes">Skyrocket/Core/Math/Vector2.hpp</includes>
    <includes refid="_common_8hpp" local="yes">Skyrocket/Core/Math/Common.hpp</includes>
    <includes refid="_error_8hpp" local="yes">Skyrocket/Core/Diagnostics/Error.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdint</includes>
    <includedby refid="_rectangle_8hpp" local="yes">/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp</includedby>
    <includedby refid="_vector3_8hpp" local="yes">/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp</includedby>
    <includedby refid="_vector2_8hpp" local="yes">/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp</includedby>
    <includedby refid="_math_8hpp" local="yes">/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math.hpp</includedby>
    <incdepgraph>
      <node id="171">
        <label>cstdint</label>
      </node>
      <node id="170">
        <label>cmath</label>
      </node>
      <node id="168">
        <label>string</label>
      </node>
      <node id="167">
        <label>cstdarg</label>
      </node>
      <node id="160">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp</label>
        <link refid="_vector2_8hpp"/>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>Skyrocket/Platform/Config.hpp</label>
        <link refid="_config_8hpp_source"/>
      </node>
      <node id="162">
        <label>Skyrocket/Core/Diagnostics/Error.hpp</label>
        <link refid="_error_8hpp_source"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>cstdio</label>
      </node>
      <node id="164">
        <label>vector</label>
      </node>
      <node id="169">
        <label>sstream</label>
      </node>
      <node id="166">
        <label>cstdlib</label>
      </node>
      <node id="161">
        <label>Skyrocket/Core/Math/Common.hpp</label>
        <link refid="_common_8hpp_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="173">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Geometry/Rectangle.hpp</label>
        <link refid="_rectangle_8hpp_source"/>
      </node>
      <node id="172">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp</label>
        <link refid="_vector2_8hpp"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector3.hpp</label>
        <link refid="_vector3_8hpp_source"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector4.hpp</label>
        <link refid="_vector4_8hpp_source"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Graphics/Core/Vertex.hpp</label>
        <link refid="_vertex_8hpp_source"/>
      </node>
      <node id="176">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math.hpp</label>
        <link refid="_math_8hpp_source"/>
      </node>
      <node id="175">
        <label>/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Matrix4.hpp</label>
        <link refid="_matrix4_8hpp_source"/>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structsky_1_1_vector2" prot="public">sky::Vector2</innerclass>
    <innernamespace refid="namespacesky">sky</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vector.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Skyrocket<sp/>Framework</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Jacob<sp/>Milligan<sp/>on<sp/>8/12/2016.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Jacob<sp/>Milligan<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Skyrocket/Core/Math/Vector2.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Skyrocket/Core/Math/Common.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Skyrocket/Core/Diagnostics/Error.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesky" kindref="compound">sky</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29" refid="structsky_1_1_vector2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="structsky_1_1_vector2_1af518a186dc2b7a1f307e46dd012f8843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1af518a186dc2b7a1f307e46dd012f8843" kindref="member">Vector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>value)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>(value),<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>(value)<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="structsky_1_1_vector2_1a7fda45b05ababbf96c5bf8e3dfcc34b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a7fda45b05ababbf96c5bf8e3dfcc34b5" kindref="member">Vector2</ref>()<sp/>:<sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structsky_1_1_vector2_1a7a3ebc21108cae95dfffc8b3c970cf05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a7a3ebc21108cae95dfffc8b3c970cf05" kindref="member">Vector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>vx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>vy)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>(vx),<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>(vy)<sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structsky_1_1_vector2_1a1f9300457df93f62ed8931393048d56c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structsky_1_1_vector2_1a1f9300457df93f62ed8931393048d56c" kindref="member">to_string</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="structsky_1_1_vector2_1a813d98cbd69991aa3769c1b293fac833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structsky_1_1_vector2_1a813d98cbd69991aa3769c1b293fac833" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;right)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>)<sp/>+<sp/>(<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="structsky_1_1_vector2_1a6a54be7f3ebc7f94674ec26c0a8438a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structsky_1_1_vector2_1a6a54be7f3ebc7f94674ec26c0a8438a8" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="79"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(<sp/>(<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>)<sp/>+<sp/>(<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>)<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structsky_1_1_vector2_1a836f6c1e864932107ac8cbec267ade5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structsky_1_1_vector2_1a836f6c1e864932107ac8cbec267ade5d" kindref="member">squared_length</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>)<sp/>+<sp/>(<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="structsky_1_1_vector2_1a7ce9b84972e3fa789993ef373bffb024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2_1a7ce9b84972e3fa789993ef373bffb024" kindref="member">normalize</ref>()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="structsky_1_1_vector2_1a6a54be7f3ebc7f94674ec26c0a8438a8" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>/<sp/>(<sp/>(len<sp/>&lt;=<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*=<sp/>n;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*=<sp/>n;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structsky_1_1_vector2_1a707dc9987a630194bf93c9c95550e328" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/><ref refid="structsky_1_1_vector2_1a707dc9987a630194bf93c9c95550e328" kindref="member">get_normalized</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>normalized<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="structsky_1_1_vector2_1a6a54be7f3ebc7f94674ec26c0a8438a8" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>/<sp/>(<sp/>(len<sp/>&lt;=<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*<sp/>n,<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*<sp/>n);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>perpendicular()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(-<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>,<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="structsky_1_1_vector2_1aaf252cebe17d13caf180035108657b6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2_1aaf252cebe17d13caf180035108657b6d" kindref="member">clamp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>lower,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>upper)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>=<sp/>math::clamp&lt;T&gt;(<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,<sp/>lower.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,<sp/>upper.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>=<sp/>math::clamp&lt;T&gt;(<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>,<sp/>lower.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>,<sp/>upper.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structsky_1_1_vector2_1ab7c1ea6191b33126626c1cd3e951674f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2_1ab7c1ea6191b33126626c1cd3e951674f" kindref="member">clamp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>lower,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>upper)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>=<sp/>math::clamp&lt;T&gt;(<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,<sp/>lower,<sp/>upper);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>=<sp/>math::clamp&lt;T&gt;(<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>,<sp/>lower,<sp/>upper);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>target)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ydist<sp/>=<sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>-<sp/>target.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xdist<sp/>=<sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>-<sp/>target.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sqrt(<sp/>(ydist<sp/>*<sp/>ydist)<sp/>+<sp/>(xdist<sp/>*<sp/>xdist)<sp/>));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arithmetic<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151" refid="structsky_1_1_vector2_1aaa04ca26b026827b3402038c7aff3655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1aaa04ca26b026827b3402038c7aff3655" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>+=<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>+=<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161" refid="structsky_1_1_vector2_1aa10c497add544cf4cb6df625c277f7c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1aa10c497add544cf4cb6df625c277f7c6" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>+=<sp/>scalar;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>+=<sp/>scalar;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171" refid="structsky_1_1_vector2_1adaf4cfa41ee7cfd286630d7f23260a05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1adaf4cfa41ee7cfd286630d7f23260a05" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>-=<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>-=<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181" refid="structsky_1_1_vector2_1a306a20ae00dc44967f38889306f39180" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1a306a20ae00dc44967f38889306f39180" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>-=<sp/>scalar;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>-=<sp/>scalar;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="structsky_1_1_vector2_1a5e8deff803d0a103b3dc5d722211f44b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1a5e8deff803d0a103b3dc5d722211f44b" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*=<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*=<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="structsky_1_1_vector2_1abd44807e3dbfa6f0ecedb66f9d8d8b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1abd44807e3dbfa6f0ecedb66f9d8d8b4a" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="structsky_1_1_vector2_1a9c1023838957a6285159a4c2728de6ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1a9c1023838957a6285159a4c2728de6ed" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>/=<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>/=<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221" refid="structsky_1_1_vector2_1a402f7c822bcbef00de0051faa0d8a0da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/><ref refid="structsky_1_1_vector2_1a402f7c822bcbef00de0051faa0d8a0da" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231" refid="structsky_1_1_vector2_1a0fdde77b24eb817ad3d38d5b7faf2330" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="structsky_1_1_vector2_1a0fdde77b24eb817ad3d38d5b7faf2330" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SKY_ASSERT(i<sp/>&lt;<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>%d<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(&amp;<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>)[i];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="structsky_1_1_vector2_1a871b4658ca74aad00e84ea5e3d92769e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structsky_1_1_vector2_1a0fdde77b24eb817ad3d38d5b7faf2330" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="242"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SKY_ASSERT(i<sp/>&lt;<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>%d<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(&amp;<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>)[i];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="comment">//<sp/>Non-Member<sp/>overloads</highlight></codeline>
<codeline lineno="252"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arithmetic<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>+<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>+<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>+<sp/>scalar,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>+<sp/>scalar</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>-<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>-<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>-<sp/>scalar,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>-<sp/>scalar</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>/<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>/<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>divisor)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>/<sp/>divisor,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>/<sp/>divisor</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>*<sp/>scalar,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>*<sp/>scalar</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>vec)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-vec.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-vec.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Logical<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;right)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(left.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>==<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>)<sp/>&amp;&amp;<sp/>(left.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>==<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;T&gt;</ref><sp/>&amp;right)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(left.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref><sp/>!=<sp/>right.<ref refid="structsky_1_1_vector2_1ac9915b65a39ae9fa3005afddf9578e46" kindref="member">x</ref>)<sp/>||<sp/>(left.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref><sp/>!=<sp/>right.<ref refid="structsky_1_1_vector2_1a5a087f8b7d544a03a99f0a710dea021c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"></codeline>
<codeline lineno="408" refid="group__vec2aliases_1ga55e2fffac32ffb2a6be153bd44567fca" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2d</ref><sp/>=<sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="410" refid="group__vec2aliases_1ga31dcab80e3a246245eca19c52dbc7df1" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2f</ref><sp/>=<sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;float&gt;</ref>;</highlight></codeline>
<codeline lineno="412" refid="group__vec2aliases_1ga782d29576c8d4b94a602fc1206c4114e" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2i</ref><sp/>=<sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;int32_t&gt;</ref>;</highlight></codeline>
<codeline lineno="414" refid="group__vec2aliases_1ga4396f8069cbf12d71652a3be43dc55b6" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2u</ref><sp/>=<sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;uint32_t&gt;</ref>;</highlight></codeline>
<codeline lineno="416" refid="group__vec2aliases_1gaec0c495434fada2a89189be866ea785b" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2b</ref><sp/>=<sp/><ref refid="structsky_1_1_vector2" kindref="compound">Vector2&lt;bool&gt;</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Math/Vector2.hpp"/>
  </compounddef>
</doxygen>
