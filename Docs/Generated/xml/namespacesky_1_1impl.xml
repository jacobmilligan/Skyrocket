<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacesky_1_1impl" kind="namespace" language="C++">
    <compoundname>sky::impl</compoundname>
    <innerclass refid="structsky_1_1impl_1_1_assert_message" prot="public">sky::impl::AssertMessage</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_error_8cpp_1a60405c097139cca34783cab2a811e08c" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structsky_1_1impl_1_1_assert_message" kindref="compound">AssertMessage</ref> &gt;</type>
        <definition>std::vector&lt;AssertMessage&gt; sky::impl::assert_guards</definition>
        <argsstring></argsstring>
        <name>assert_guards</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Error.cpp" line="22" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Error.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_error_8hpp_1a74adc31f095bf075bf9246b83519a3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sky::impl::__sky_print_error</definition>
        <argsstring>(const char *func, const char *file, const int line, const char *type, const char *msgformat,...)</argsstring>
        <name>__sky_print_error</name>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msgformat</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Prints a Skyrocket-formatted error message to the console. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of error that occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msgformat</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string for the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Format parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Error.hpp" line="30" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Error.cpp" bodystart="43" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="_error_8hpp_1aafe5b3e644836b0793c164a8defac5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sky::impl::__sky_assert_handler</definition>
        <argsstring>(const char *function, const char *file, const int line, const char *expr, const char *msgformat,...)</argsstring>
        <name>__sky_assert_handler</name>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msgformat</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Handles the assertion macro. Prints the format assertion string to stderr. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function the assertion occurred in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file the assertion occurred in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line the assertion occurred in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>String representing the assertion that failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msgformat</parametername>
</parameternamelist>
<parameterdescription>
<para>The message format string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Format arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Error.hpp" line="40" column="1" bodyfile="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Internal/Error.cpp" bodystart="24" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/Jacob/Dev/Repos/SkyrocketModules/Source/Skyrocket/Core/Diagnostics/Error.hpp" line="23" column="1"/>
  </compounddef>
</doxygen>
